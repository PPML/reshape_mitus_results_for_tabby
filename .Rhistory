library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(MITUS)
model_load()
sim_dat<-OutputsInt(loc = "US",ParMatrix = Par, prg_chng = def_prgchng(Par[1]),ttt_list = def_tt())
View(Par)
sim_dat<-OutputsInt(loc = "US",ParMatrix = Par, prg_chng = def_prgchng(Par[1]),ttt_list = def_tt())
basecase<-OutputsZint(samp_i = 1,
ParMatrix = Par,
loc = "US",
prg_chng = def_prgchng(Par[1,]),
ttt_list = def_ttt())
library(tabus)
format_as_restab_big_ages(basecase)
library(tabus)
library(tabus)
devtools::document()
library(tabus)
library(tabus)
library(tabus)
library(tabus)
NumericVector rt(ResTab)
library(MITUS)
library(tabus)
library(tabus)
library(inline)
library(MITUS)
model_load()
loc<-"US"
results.list<-make_all_scenarios(loc,Par)
library(tabus)
#make some lists of reformatted data
ResTabC <- list()
ResTabC[['small_results']] <- format_as_restab_small_ages(results.list)
ResTabC[['big_results']] <- format_as_restab_big_ages(results.list)
ResTab<-ResTabC[[1]]
ResTabus<-ResTabC[[2]]
ResTabfb<-ResTabC[[3]]
length(ResTabC)
ResTab<-ResTabC[['small_results']][[1]]
ResTabus<-ResTabC[['small_results']][[2]]
ResTabfb<-ResTabC[['small_results']][[3]]
NumericVector rt(ResTab);
rt(ResTab)
typeof(ResTab)
dim(ResTab)
rt(as.data.frame(ResTab))
rt(1e2, df = 2)
NumericVector rt(ResTab)
View(head(ResTab))
dim(ResTab)
ResTab[,,10,]
restab_ints_sm <- cpp_reshaper(ResTabC[['small_results']][[1]],ResTabC[['small_results']][[2]],
ResTabC[['small_results']][[3]], restab_ints_sm)
library(inline)
cpp_reshaper <- cxxfunction(
signature(ResTab='numeric', ResTabus='numeric', ResTabfb='numeric', res_tab2 = 'numeric'),
plugin='Rcpp',
body=readr::read_file(
system.file('inline_cpp/format_restab2.cpp', package='tabus')))
restab_ints_sm <- cpp_reshaper(ResTabC[['small_results']][[1]],ResTabC[['small_results']][[2]],
ResTabC[['small_results']][[3]], restab_ints_sm)
intvs <- c('base_case', paste0('intervention_', 1:5), paste0('scenario_', 1:3))
restab_sm <- restab_ints_sm <- make_empty_res_tab2sm(intvs)
restab_ints_sm %<>% mutate_if(is.factor, as.integer) %>% as.matrix
library(inline)
cpp_reshaper <- cxxfunction(
signature(ResTab='numeric', ResTabus='numeric', ResTabfb='numeric', res_tab2 = 'numeric'),
plugin='Rcpp',
body=readr::read_file(
system.file('inline_cpp/format_restab2.cpp', package='tabus')))
restab_ints_sm <- cpp_reshaper(ResTabC[['small_results']][[1]],ResTabC[['small_results']][[2]],
ResTabC[['small_results']][[3]], restab_ints_sm)
dim(restab_ints_sm)
View(restab_ints_sm[1:10,])
library(tabus)
library(tabus)
results<-results.list
x<-format_as_restab_big_ages(results)
dim(x)
length(x)
x[[1]][6,,10,]
simulation_data<-results.list
model_years = (2020:2050)-1949
tt<-0
# preflight checklist
if (class(simulation_data) != 'list') {
stop("simulation_data must be a list")
}
if (! all(sapply(simulation_data, function(sim) length(dim(sim))) == 3)) {
stop("each simulation_data list entry must have 3 dimensions")
# simulation index, model years, and age ids.
}
if (! all(apply(sapply(simulation_data, dim), 1, function(dim_row) length(unique(dim_row))) == 1)) {
stop("simulation_data list entries must have the same dimensions.")
}
# determine number of interventions and number of simulation runs from
# simulation_data.
nintvs <- length(simulation_data)
nr <- dim(simulation_data[[1]])[[1]]
#create 3 lists to hold output
ResTabfb <- ResTabus <- ResTab <- array(NA,dim=c(nr*nintvs,length(model_years),10,11))
# For each scenario/intervention, fill in the results from the corresponding
# simulation_data entry
for (intv in 1:nintvs){
# Loop through each age group
for (ag in 1:11){
################################################################################
################################################################################
#total population
#dimensions are
#scenarios; length age id;
################################################################################
#get the years
ResTab[1:nr+((intv-1)*nr),,1,ag]<-simulation_data[[intv]][,model_years,1]
#number of ltbi prevalence in thousands
ResTab[1:nr+((intv-1)*nr),,2,ag]<-apply(simulation_data[[intv]][,model_years,c(54,65)+ag],c(1,2),sum)*1e3
#percentage of ltbi prevalence
ResTab[1:nr+((intv-1)*nr),,3,ag]<-apply(simulation_data[[intv]][,model_years,c(54,65)+ag],c(1,2),sum)/simulation_data[[intv]][,model_years,2+ag]*1e2
#incident tb infections in thousands
ResTab[1:nr+((intv-1)*nr),,4,ag]<-apply(simulation_data[[intv]][,model_years,c(564+ag,575+ag)],c(1,2),sum)*1e3
#incident tb infections per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,5,ag]<-apply(simulation_data[[intv]][,model_years,c(564+ag,575+ag)],c(1,2),sum)/simulation_data[[intv]][,model_years,2+ag]*1e5
#TB notifications (incidence) (alive+dead at diagnosis) in thousands
ResTab[1:nr+((intv-1)*nr),,6,ag]<-apply(simulation_data[[intv]][,model_years,c(135,188)+ag],c(1,2),sum)*1e3
#TB notifications (incidence) (alive+dead at diagnosis) per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,7,ag]<-apply(simulation_data[[intv]][,model_years,c(135,188)+ag],c(1,2),sum)/simulation_data[[intv]][,model_years,2+ag]*1e5
#tb attributable deaths in thousands
ResTab[1:nr+((intv-1)*nr),,8,ag]<-apply(simulation_data[[intv]][,model_years,c(87,98)+ag],c(1,2),sum)*1e3
#  tb attributable deaths per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,9,ag]<-apply(simulation_data[[intv]][,model_years,c(87,98)+ag],c(1,2),sum)/simulation_data[[intv]][,model_years,2+ag]*1e5
#  total number of additional tests
ResTab[1:nr+((intv-1)*nr),,10,ag]<-apply(simulation_data[[intv]][,model_years,c(683,694)+ag],c(1,2),sum)*1e6 #/simulation_data[[intv]][,model_years,2+ag]*1e5
################################################################################
#US Born population
################################################################################
#get da years
ResTabus[1:nr+((intv-1)*nr),,1,ag]<-simulation_data[[intv]][,model_years,1]
#number of ltbi prevalence in thousands
ResTabus[1:nr+((intv-1)*nr),,2,ag]<-simulation_data[[intv]][,model_years,54+ag]*1e3
#percentage of ltbi prevalence
ResTabus[1:nr+((intv-1)*nr),,3,ag]<-simulation_data[[intv]][,model_years,54+ag]/simulation_data[[intv]][,model_years,32+ag]*1e2
#incident tb infections in thousands
ResTabus[1:nr+((intv-1)*nr),,4,ag]<-simulation_data[[intv]][,model_years,564+ag]*1e3
#incident tb infections per hundred thousand
ResTabus[1:nr+((intv-1)*nr),,5,ag]<-simulation_data[[intv]][,model_years,564+ag]/simulation_data[[intv]][,model_years,32+ag]*1e5
#TB notifications (alive+dead at diagnosis) in thousands
ResTabus[1:nr+((intv-1)*nr),,6,ag]<-apply(simulation_data[[intv]][,model_years,c(204,215)+ag],c(1,2),sum)*1e3
#TB notifications (alive+dead at diagnosis) per hundreds of thousands
ResTabus[1:nr+((intv-1)*nr),,7,ag]<-apply(simulation_data[[intv]][,model_years,c(204,215)+ag],c(1,2),sum)/simulation_data[[intv]][,model_years,32+ag]*1e5
#tb attributable deaths in thousands
ResTabus[1:nr+((intv-1)*nr),,8,ag]<-simulation_data[[intv]][,model_years,87+ag]*1e3
#  tb attributable deaths per hundreds of thousands
ResTabus[1:nr+((intv-1)*nr),,9,ag]<-simulation_data[[intv]][,model_years,87+ag]/simulation_data[[intv]][,model_years,32+ag]*1e5
#  total number of additional tests
ResTabus[1:nr+((intv-1)*nr),,10,ag]<-simulation_data[[intv]][,model_years,683+ag]*1e6 #/simulation_data[[intv]][,model_years,2+ag]*1e5
################################################################################
#non-US Born population
################################################################################
# years
ResTabfb[1:nr+((intv-1)*nr),,1,ag]<-simulation_data[[intv]][,model_years,1]
#number of ltbi prevalence in thousands
ResTabfb[1:nr+((intv-1)*nr),,2,ag]<-simulation_data[[intv]][,model_years,65+ag]*1e3
#percentage of ltbi prevalence
ResTabfb[1:nr+((intv-1)*nr),,3,ag]<-simulation_data[[intv]][,model_years,65+ag]/simulation_data[[intv]][,model_years,43+ag]*1e2
#incident tb infections in thousands
ResTabfb[1:nr+((intv-1)*nr),,4,ag]<-simulation_data[[intv]][,model_years,575+ag]*1e3
#incident tb infections per hundred thousand
ResTabfb[1:nr+((intv-1)*nr),,5,ag]<-simulation_data[[intv]][,model_years,575+ag]/simulation_data[[intv]][,model_years,43+ag]*1e5
#TB notifications (alive+dead at diagnosis)
#calculated as total notifications minus US only notifications in thousands
ResTabfb[1:nr+((intv-1)*nr),,6,ag]<-(apply(simulation_data[[intv]][,model_years,c(135,188)+ag],c(1,2),sum)-apply(simulation_data[[intv]][,model_years,c(204,215)+ag],c(1,2),sum))*1e3
#percentage TB notifications (alive+dead at diagnosis) per hundreds of thousands
ResTabfb[1:nr+((intv-1)*nr),,7,ag]<-(apply(simulation_data[[intv]][,model_years,c(135,188)+ag],c(1,2),sum)-apply(simulation_data[[intv]][,model_years,c(204,215)+ag],c(1,2),sum))/simulation_data[[intv]][,model_years,43+ag]*1e5
#tb attributable deaths
ResTabfb[1:nr+((intv-1)*nr),,8,ag]<-simulation_data[[intv]][,model_years,98+ag]*1e3
# percentage tb attributable deaths per hundreds of thousands
ResTabfb[1:nr+((intv-1)*nr),,9,ag]<-simulation_data[[intv]][,model_years,98+ag]/simulation_data[[intv]][,model_years,43+ag]*1e5
#  total number of additional tests
ResTabfb[1:nr+((intv-1)*nr),,10,ag]<-simulation_data[[intv]][,model_years,694+ag]*1e6 #/simulation_data[[intv]][,model_years,2+ag]*1e5
} # end age group loop
} # end intervention loop
return(list(ResTab = ResTab,
ResTabus = ResTabus,
ResTabfb = ResTabfb))
model_years = (2020:2050)-1949
tt<-0
# preflight checklist
if (class(simulation_data) != 'list') {
stop("simulation_data must be a list")
}
if (! all(sapply(simulation_data, function(sim) length(dim(sim))) == 3)) {
stop("each simulation_data list entry must have 3 dimensions")
# simulation index, model years, and age ids.
}
if (! all(apply(sapply(simulation_data, dim), 1, function(dim_row) length(unique(dim_row))) == 1)) {
stop("simulation_data list entries must have the same dimensions.")
}
# determine number of interventions and number of simulation runs from
# simulation_data.
nintvs <- length(simulation_data)
nr <- dim(simulation_data[[1]])[[1]]
#create 3 lists to hold output
ResTabfb <- ResTabus <- ResTab <- array(NA,dim=c(nr*nintvs,length(model_years),10,4))
nintv<-1
b_ag<-1
################################################################################
#total population
#dimensions are
#scenarios; length age id;
# print(1:nr+((intv-1)*10))
ag_vec<- switch(b_ag,1:11, c(1,2,3),c(4,5,6,7),c(8,9,10,11))
################################################################################
# for (ag_vec in ag_vector){
ResTab[1:nr+((intv-1)*nr),,1,b_ag]<-simulation_data[[intv]][,model_years,1]
#number of ltbi prevalence in thousands
ResTab[1:nr+((intv-1)*nr),,2,b_ag]<-apply(simulation_data[[intv]][,model_years,c(54+ag_vec,65+ag_vec)],c(1,2),sum)*1e3
#percentage of ltbi prevalence
ResTab[1:nr+((intv-1)*nr),,3,b_ag]<-apply(simulation_data[[intv]][,model_years,c(54+ag_vec,65+ag_vec)],c(1,2),sum)/rowSums(simulation_data[[intv]][,model_years,2+ag_vec], dims = 2)*1e2
#incident tb infections in thousands
ResTab[1:nr+((intv-1)*nr),,4,b_ag]<-apply(simulation_data[[intv]][,model_years,c(564+ag_vec,575+ag_vec)],c(1,2),sum)*1e3
#incident tb infections per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,5,b_ag]<-apply(simulation_data[[intv]][,model_years,c(564+ag_vec,575+ag_vec)],c(1,2),sum)/rowSums(simulation_data[[intv]][,model_years,2+ag_vec], dims = 2)*1e5
#TB notifications (incidence) (alive+dead at diagnosis) in thousands
ResTab[1:nr+((intv-1)*nr),,6,b_ag]<-apply(simulation_data[[intv]][,model_years,c(135+ag_vec,188+ag_vec)],c(1,2),sum)*1e3
# TB notifications (alive+dead at diagnosis) per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,7,b_ag]<-apply(simulation_data[[intv]][,model_years,c(135+ag_vec,188+ag_vec)],c(1,2),sum)/rowSums(simulation_data[[intv]][,model_years,2+ag_vec], dims = 2)*1e5
#tb attributable deaths in thousands
ResTab[1:nr+((intv-1)*nr),,8,b_ag]<-apply(simulation_data[[intv]][,model_years,c(87+ag_vec,98+ag_vec)],c(1,2),sum)*1e3
# tb attributable deaths per hundreds of thousands
ResTab[1:nr+((intv-1)*nr),,9,b_ag]<-apply(simulation_data[[intv]][,model_years,c(87+ag_vec,98+ag_vec)],c(1,2),sum)/rowSums(simulation_data[[intv]][,model_years,2+ag_vec], dims = 2)*1e5
#  total number of additional tests
ResTab[1:nr+((intv-1)*nr),,10,b_ag]<-apply(simulation_data[[intv]][,model_years,c(683+ag_vec,694+ag_vec)],c(1,2),sum)*1e3
library(tabus)
load("/Users/nis100/Desktop/US_081920/Opt_US_r7_1_2020-08-20.rda")
694+11
#  total number of ltbi tests
ResTab[1:nr+((intv-1)*nr),,10,b_ag]<-apply(simulation_data[[intv]][,model_years,c(683+ag_vec,694+ag_vec)],c(1,2),sum)*1e3
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
library(tabus)
